enum Role {
    ADMIN
    MEMBER
}

enum ContactType {
    EMAIL
    PHONE
}

enum PaymentStatus {
    PREORDER
    PAID
    UNPAID
}

enum TaskStatus {
    OPEN
    IN_PROGRESS
    CLOSED
}

type User {
    id: ID!
    firstName: String!
    lastName: String!
    username: String!
    email: String!
    password: String!
    role: Role!
    tasks: [Task]
    events: [Event]
    shiftBlocks: [ShiftBlock]
}

type Event {
    id: ID!
    name: String!
    location: String
    start: Date
    end: Date
    description: String
    bannerURL: String!
    products: [Product]
    transactions: [Transaction]
    tasks: [Task]
    groups: [Group]
    shifts: [Shift]
}

type Task {
    id: ID!
    event: Event!
    name: String!
    status: TaskStatus!
    tags: [Tag]
    start: Date
    end: Date
    assignedTo: [User]
}

type Tag {
    id: ID!
    name: String!
    color: String!
    tasks: [Task]
}

type Product {
    id: ID!
    name: String!
    price: Int!
    cost: Int!
    products: [Product]
}

type Transaction {
    id: ID!
    event: Event
    quantity: Int
    product: Product!
    clientName: String!
    clientContact(type: ContactType = EMAIL): String
    paymentStatus: PaymentStatus
    paymentDate: Date
    additionDate: Date
    addedBy: User
}

enum RecordType {
    MERCH
    TICKET
    DONATION
    PAYMENT
}

type Record {
    # Common
    id: ID!
    event: Event
    amount: Float
    date: Date
    author: User

    # Inflow
    # Donaton
    donor: String

    #

    # Outflow
    # Payment
    detail: String
    recipt: String
}

type Shift {
    id: ID!
    event: Event!
    group: Group
    start: Date
    end: Date
    assignedTo: [User]
}

type ShiftBlock {
    id: ID!
    shift: Shift
    users: [User]
    start: Date
    end: Date
}

type Group {
    id: ID!
    event: Event!
    name: String!
    shifts: [Shift]
}
